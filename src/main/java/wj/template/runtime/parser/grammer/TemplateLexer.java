package wj.template.runtime.parser.grammer;// Generated from java-escape by ANTLR 4.11.1
import org.antlr.v4.runtime.Lexer;
import org.antlr.v4.runtime.CharStream;
import org.antlr.v4.runtime.Token;
import org.antlr.v4.runtime.TokenStream;
import org.antlr.v4.runtime.*;
import org.antlr.v4.runtime.atn.*;
import org.antlr.v4.runtime.dfa.DFA;
import org.antlr.v4.runtime.misc.*;

@SuppressWarnings({"all", "warnings", "unchecked", "unused", "cast", "CheckReturnValue"})
public class TemplateLexer extends Lexer {
	static { RuntimeMetaData.checkVersion("4.11.1", RuntimeMetaData.VERSION); }

	protected static final DFA[] _decisionToDFA;
	protected static final PredictionContextCache _sharedContextCache =
		new PredictionContextCache();
	public static final int
		TEXT_PLAIN=1, TEXT_CHAR_SINGLE=2, CLOSE_IF=3, OPEN_IF=4, ELSEIF=5, ELSE=6, 
		OPEN_FOR=7, CLOSE_FOR=8, VALUE_OPEN=9, WHITESPACE=10, AS=11, TRUE=12, 
		AND=13, OR=14, DOT=15, QUESTION=16, DOUBLEQ=17, NOT=18, COMMA=19, LPAREN=20, 
		RPAREN=21, LBRACE=22, RBRACE=23, GT=24, EQUAL=25, NE=26, GTO=27, LTO=28, 
		PLUS=29, MINUS=30, MUL=31, DIV=32, MOD=33, IDENTIFIER=34, STRING_DOUBLE=35, 
		STRING_SINGLE=36, INTEGER=37;
	public static final int
		INSIDE=1;
	public static String[] channelNames = {
		"DEFAULT_TOKEN_CHANNEL", "HIDDEN"
	};

	public static String[] modeNames = {
		"DEFAULT_MODE", "INSIDE"
	};

	private static String[] makeRuleNames() {
		return new String[] {
			"TEXT_PLAIN", "TEXT_CHAR_SINGLE", "CLOSE_IF", "OPEN_IF", "ELSEIF", "ELSE", 
			"OPEN_FOR", "CLOSE_FOR", "VALUE_OPEN", "WHITESPACE", "AS", "TRUE", "AND", 
			"OR", "DOT", "QUESTION", "DOUBLEQ", "NOT", "COMMA", "LPAREN", "RPAREN", 
			"LBRACE", "RBRACE", "GT", "EQUAL", "NE", "GTO", "LTO", "PLUS", "MINUS", 
			"MUL", "DIV", "MOD", "IDENTIFIER", "STRING_DOUBLE", "STRING_SINGLE", 
			"INTEGER", "OTHERS"
		};
	}
	public static final String[] ruleNames = makeRuleNames();

	private static String[] makeLiteralNames() {
		return new String[] {
			null, null, null, "'</#if>'", "'<#if'", "'<#elseif'", "'<#else>'", "'<#list'", 
			"'</#list>'", "'${'", null, "'as'", "'true'", "'&&'", "'||'", "'.'", 
			"'?'", "'??'", "'!'", "','", "'('", "')'", "'{'", "'}'", "'>'", "'=='", 
			"'!='", "'gt'", "'lt'", "'+'", "'-'", "'*'", "'/'", "'%'"
		};
	}
	private static final String[] _LITERAL_NAMES = makeLiteralNames();
	private static String[] makeSymbolicNames() {
		return new String[] {
			null, "TEXT_PLAIN", "TEXT_CHAR_SINGLE", "CLOSE_IF", "OPEN_IF", "ELSEIF", 
			"ELSE", "OPEN_FOR", "CLOSE_FOR", "VALUE_OPEN", "WHITESPACE", "AS", "TRUE", 
			"AND", "OR", "DOT", "QUESTION", "DOUBLEQ", "NOT", "COMMA", "LPAREN", 
			"RPAREN", "LBRACE", "RBRACE", "GT", "EQUAL", "NE", "GTO", "LTO", "PLUS", 
			"MINUS", "MUL", "DIV", "MOD", "IDENTIFIER", "STRING_DOUBLE", "STRING_SINGLE", 
			"INTEGER"
		};
	}
	private static final String[] _SYMBOLIC_NAMES = makeSymbolicNames();
	public static final Vocabulary VOCABULARY = new VocabularyImpl(_LITERAL_NAMES, _SYMBOLIC_NAMES);

	/**
	 * @deprecated Use {@link #VOCABULARY} instead.
	 */
	@Deprecated
	public static final String[] tokenNames;
	static {
		tokenNames = new String[_SYMBOLIC_NAMES.length];
		for (int i = 0; i < tokenNames.length; i++) {
			tokenNames[i] = VOCABULARY.getLiteralName(i);
			if (tokenNames[i] == null) {
				tokenNames[i] = VOCABULARY.getSymbolicName(i);
			}

			if (tokenNames[i] == null) {
				tokenNames[i] = "<INVALID>";
			}
		}
	}

	@Override
	@Deprecated
	public String[] getTokenNames() {
		return tokenNames;
	}

	@Override

	public Vocabulary getVocabulary() {
		return VOCABULARY;
	}


	public TemplateLexer(CharStream input) {
		super(input);
		_interp = new LexerATNSimulator(this,_ATN,_decisionToDFA,_sharedContextCache);
	}

	@Override
	public String getGrammarFileName() { return "TemplateLexer.g4"; }

	@Override
	public String[] getRuleNames() { return ruleNames; }

	@Override
	public String getSerializedATN() { return _serializedATN; }

	@Override
	public String[] getChannelNames() { return channelNames; }

	@Override
	public String[] getModeNames() { return modeNames; }

	@Override
	public ATN getATN() { return _ATN; }

	public static final String _serializedATN =
		"\u0004\u0000%\u00f6\u0006\uffff\uffff\u0006\uffff\uffff\u0002\u0000\u0007"+
		"\u0000\u0002\u0001\u0007\u0001\u0002\u0002\u0007\u0002\u0002\u0003\u0007"+
		"\u0003\u0002\u0004\u0007\u0004\u0002\u0005\u0007\u0005\u0002\u0006\u0007"+
		"\u0006\u0002\u0007\u0007\u0007\u0002\b\u0007\b\u0002\t\u0007\t\u0002\n"+
		"\u0007\n\u0002\u000b\u0007\u000b\u0002\f\u0007\f\u0002\r\u0007\r\u0002"+
		"\u000e\u0007\u000e\u0002\u000f\u0007\u000f\u0002\u0010\u0007\u0010\u0002"+
		"\u0011\u0007\u0011\u0002\u0012\u0007\u0012\u0002\u0013\u0007\u0013\u0002"+
		"\u0014\u0007\u0014\u0002\u0015\u0007\u0015\u0002\u0016\u0007\u0016\u0002"+
		"\u0017\u0007\u0017\u0002\u0018\u0007\u0018\u0002\u0019\u0007\u0019\u0002"+
		"\u001a\u0007\u001a\u0002\u001b\u0007\u001b\u0002\u001c\u0007\u001c\u0002"+
		"\u001d\u0007\u001d\u0002\u001e\u0007\u001e\u0002\u001f\u0007\u001f\u0002"+
		" \u0007 \u0002!\u0007!\u0002\"\u0007\"\u0002#\u0007#\u0002$\u0007$\u0002"+
		"%\u0007%\u0001\u0000\u0004\u0000P\b\u0000\u000b\u0000\f\u0000Q\u0001\u0001"+
		"\u0001\u0001\u0001\u0002\u0001\u0002\u0001\u0002\u0001\u0002\u0001\u0002"+
		"\u0001\u0002\u0001\u0002\u0001\u0003\u0001\u0003\u0001\u0003\u0001\u0003"+
		"\u0001\u0003\u0001\u0003\u0001\u0003\u0001\u0004\u0001\u0004\u0001\u0004"+
		"\u0001\u0004\u0001\u0004\u0001\u0004\u0001\u0004\u0001\u0004\u0001\u0004"+
		"\u0001\u0004\u0001\u0004\u0001\u0005\u0001\u0005\u0001\u0005\u0001\u0005"+
		"\u0001\u0005\u0001\u0005\u0001\u0005\u0001\u0005\u0001\u0006\u0001\u0006"+
		"\u0001\u0006\u0001\u0006\u0001\u0006\u0001\u0006\u0001\u0006\u0001\u0006"+
		"\u0001\u0006\u0001\u0007\u0001\u0007\u0001\u0007\u0001\u0007\u0001\u0007"+
		"\u0001\u0007\u0001\u0007\u0001\u0007\u0001\u0007\u0001\b\u0001\b\u0001"+
		"\b\u0001\b\u0001\b\u0001\t\u0004\t\u008f\b\t\u000b\t\f\t\u0090\u0001\t"+
		"\u0001\t\u0001\n\u0001\n\u0001\n\u0001\u000b\u0001\u000b\u0001\u000b\u0001"+
		"\u000b\u0001\u000b\u0001\f\u0001\f\u0001\f\u0001\r\u0001\r\u0001\r\u0001"+
		"\u000e\u0001\u000e\u0001\u000f\u0001\u000f\u0001\u0010\u0001\u0010\u0001"+
		"\u0010\u0001\u0011\u0001\u0011\u0001\u0012\u0001\u0012\u0001\u0013\u0001"+
		"\u0013\u0001\u0014\u0001\u0014\u0001\u0015\u0001\u0015\u0001\u0016\u0001"+
		"\u0016\u0001\u0016\u0001\u0016\u0001\u0017\u0001\u0017\u0001\u0017\u0001"+
		"\u0017\u0001\u0018\u0001\u0018\u0001\u0018\u0001\u0019\u0001\u0019\u0001"+
		"\u0019\u0001\u001a\u0001\u001a\u0001\u001a\u0001\u001b\u0001\u001b\u0001"+
		"\u001b\u0001\u001c\u0001\u001c\u0001\u001d\u0001\u001d\u0001\u001e\u0001"+
		"\u001e\u0001\u001f\u0001\u001f\u0001 \u0001 \u0001!\u0001!\u0005!\u00d4"+
		"\b!\n!\f!\u00d7\t!\u0001\"\u0001\"\u0005\"\u00db\b\"\n\"\f\"\u00de\t\""+
		"\u0001\"\u0001\"\u0001#\u0001#\u0005#\u00e4\b#\n#\f#\u00e7\t#\u0001#\u0001"+
		"#\u0001$\u0001$\u0001$\u0005$\u00ee\b$\n$\f$\u00f1\t$\u0003$\u00f3\b$"+
		"\u0001%\u0001%\u0002\u00dc\u00e5\u0000&\u0002\u0001\u0004\u0002\u0006"+
		"\u0003\b\u0004\n\u0005\f\u0006\u000e\u0007\u0010\b\u0012\t\u0014\n\u0016"+
		"\u000b\u0018\f\u001a\r\u001c\u000e\u001e\u000f \u0010\"\u0011$\u0012&"+
		"\u0013(\u0014*\u0015,\u0016.\u00170\u00182\u00194\u001a6\u001b8\u001c"+
		":\u001d<\u001e>\u001f@ B!D\"F#H$J%L\u0000\u0002\u0000\u0001\u0007\u0002"+
		"\u0000$$<<\u0003\u0000\t\n\r\r  \u0003\u0000AZ__az\u0004\u000009AZ__a"+
		"z\u0001\u000019\u0001\u000009\u0003\u0000\n\n\r\r\\\\\u00fa\u0000\u0002"+
		"\u0001\u0000\u0000\u0000\u0000\u0004\u0001\u0000\u0000\u0000\u0000\u0006"+
		"\u0001\u0000\u0000\u0000\u0000\b\u0001\u0000\u0000\u0000\u0000\n\u0001"+
		"\u0000\u0000\u0000\u0000\f\u0001\u0000\u0000\u0000\u0000\u000e\u0001\u0000"+
		"\u0000\u0000\u0000\u0010\u0001\u0000\u0000\u0000\u0000\u0012\u0001\u0000"+
		"\u0000\u0000\u0001\u0014\u0001\u0000\u0000\u0000\u0001\u0016\u0001\u0000"+
		"\u0000\u0000\u0001\u0018\u0001\u0000\u0000\u0000\u0001\u001a\u0001\u0000"+
		"\u0000\u0000\u0001\u001c\u0001\u0000\u0000\u0000\u0001\u001e\u0001\u0000"+
		"\u0000\u0000\u0001 \u0001\u0000\u0000\u0000\u0001\"\u0001\u0000\u0000"+
		"\u0000\u0001$\u0001\u0000\u0000\u0000\u0001&\u0001\u0000\u0000\u0000\u0001"+
		"(\u0001\u0000\u0000\u0000\u0001*\u0001\u0000\u0000\u0000\u0001,\u0001"+
		"\u0000\u0000\u0000\u0001.\u0001\u0000\u0000\u0000\u00010\u0001\u0000\u0000"+
		"\u0000\u00012\u0001\u0000\u0000\u0000\u00014\u0001\u0000\u0000\u0000\u0001"+
		"6\u0001\u0000\u0000\u0000\u00018\u0001\u0000\u0000\u0000\u0001:\u0001"+
		"\u0000\u0000\u0000\u0001<\u0001\u0000\u0000\u0000\u0001>\u0001\u0000\u0000"+
		"\u0000\u0001@\u0001\u0000\u0000\u0000\u0001B\u0001\u0000\u0000\u0000\u0001"+
		"D\u0001\u0000\u0000\u0000\u0001F\u0001\u0000\u0000\u0000\u0001H\u0001"+
		"\u0000\u0000\u0000\u0001J\u0001\u0000\u0000\u0000\u0002O\u0001\u0000\u0000"+
		"\u0000\u0004S\u0001\u0000\u0000\u0000\u0006U\u0001\u0000\u0000\u0000\b"+
		"\\\u0001\u0000\u0000\u0000\nc\u0001\u0000\u0000\u0000\fn\u0001\u0000\u0000"+
		"\u0000\u000ev\u0001\u0000\u0000\u0000\u0010\u007f\u0001\u0000\u0000\u0000"+
		"\u0012\u0088\u0001\u0000\u0000\u0000\u0014\u008e\u0001\u0000\u0000\u0000"+
		"\u0016\u0094\u0001\u0000\u0000\u0000\u0018\u0097\u0001\u0000\u0000\u0000"+
		"\u001a\u009c\u0001\u0000\u0000\u0000\u001c\u009f\u0001\u0000\u0000\u0000"+
		"\u001e\u00a2\u0001\u0000\u0000\u0000 \u00a4\u0001\u0000\u0000\u0000\""+
		"\u00a6\u0001\u0000\u0000\u0000$\u00a9\u0001\u0000\u0000\u0000&\u00ab\u0001"+
		"\u0000\u0000\u0000(\u00ad\u0001\u0000\u0000\u0000*\u00af\u0001\u0000\u0000"+
		"\u0000,\u00b1\u0001\u0000\u0000\u0000.\u00b3\u0001\u0000\u0000\u00000"+
		"\u00b7\u0001\u0000\u0000\u00002\u00bb\u0001\u0000\u0000\u00004\u00be\u0001"+
		"\u0000\u0000\u00006\u00c1\u0001\u0000\u0000\u00008\u00c4\u0001\u0000\u0000"+
		"\u0000:\u00c7\u0001\u0000\u0000\u0000<\u00c9\u0001\u0000\u0000\u0000>"+
		"\u00cb\u0001\u0000\u0000\u0000@\u00cd\u0001\u0000\u0000\u0000B\u00cf\u0001"+
		"\u0000\u0000\u0000D\u00d1\u0001\u0000\u0000\u0000F\u00d8\u0001\u0000\u0000"+
		"\u0000H\u00e1\u0001\u0000\u0000\u0000J\u00f2\u0001\u0000\u0000\u0000L"+
		"\u00f4\u0001\u0000\u0000\u0000NP\b\u0000\u0000\u0000ON\u0001\u0000\u0000"+
		"\u0000PQ\u0001\u0000\u0000\u0000QO\u0001\u0000\u0000\u0000QR\u0001\u0000"+
		"\u0000\u0000R\u0003\u0001\u0000\u0000\u0000ST\u0007\u0000\u0000\u0000"+
		"T\u0005\u0001\u0000\u0000\u0000UV\u0005<\u0000\u0000VW\u0005/\u0000\u0000"+
		"WX\u0005#\u0000\u0000XY\u0005i\u0000\u0000YZ\u0005f\u0000\u0000Z[\u0005"+
		">\u0000\u0000[\u0007\u0001\u0000\u0000\u0000\\]\u0005<\u0000\u0000]^\u0005"+
		"#\u0000\u0000^_\u0005i\u0000\u0000_`\u0005f\u0000\u0000`a\u0001\u0000"+
		"\u0000\u0000ab\u0006\u0003\u0000\u0000b\t\u0001\u0000\u0000\u0000cd\u0005"+
		"<\u0000\u0000de\u0005#\u0000\u0000ef\u0005e\u0000\u0000fg\u0005l\u0000"+
		"\u0000gh\u0005s\u0000\u0000hi\u0005e\u0000\u0000ij\u0005i\u0000\u0000"+
		"jk\u0005f\u0000\u0000kl\u0001\u0000\u0000\u0000lm\u0006\u0004\u0000\u0000"+
		"m\u000b\u0001\u0000\u0000\u0000no\u0005<\u0000\u0000op\u0005#\u0000\u0000"+
		"pq\u0005e\u0000\u0000qr\u0005l\u0000\u0000rs\u0005s\u0000\u0000st\u0005"+
		"e\u0000\u0000tu\u0005>\u0000\u0000u\r\u0001\u0000\u0000\u0000vw\u0005"+
		"<\u0000\u0000wx\u0005#\u0000\u0000xy\u0005l\u0000\u0000yz\u0005i\u0000"+
		"\u0000z{\u0005s\u0000\u0000{|\u0005t\u0000\u0000|}\u0001\u0000\u0000\u0000"+
		"}~\u0006\u0006\u0000\u0000~\u000f\u0001\u0000\u0000\u0000\u007f\u0080"+
		"\u0005<\u0000\u0000\u0080\u0081\u0005/\u0000\u0000\u0081\u0082\u0005#"+
		"\u0000\u0000\u0082\u0083\u0005l\u0000\u0000\u0083\u0084\u0005i\u0000\u0000"+
		"\u0084\u0085\u0005s\u0000\u0000\u0085\u0086\u0005t\u0000\u0000\u0086\u0087"+
		"\u0005>\u0000\u0000\u0087\u0011\u0001\u0000\u0000\u0000\u0088\u0089\u0005"+
		"$\u0000\u0000\u0089\u008a\u0005{\u0000\u0000\u008a\u008b\u0001\u0000\u0000"+
		"\u0000\u008b\u008c\u0006\b\u0000\u0000\u008c\u0013\u0001\u0000\u0000\u0000"+
		"\u008d\u008f\u0007\u0001\u0000\u0000\u008e\u008d\u0001\u0000\u0000\u0000"+
		"\u008f\u0090\u0001\u0000\u0000\u0000\u0090\u008e\u0001\u0000\u0000\u0000"+
		"\u0090\u0091\u0001\u0000\u0000\u0000\u0091\u0092\u0001\u0000\u0000\u0000"+
		"\u0092\u0093\u0006\t\u0001\u0000\u0093\u0015\u0001\u0000\u0000\u0000\u0094"+
		"\u0095\u0005a\u0000\u0000\u0095\u0096\u0005s\u0000\u0000\u0096\u0017\u0001"+
		"\u0000\u0000\u0000\u0097\u0098\u0005t\u0000\u0000\u0098\u0099\u0005r\u0000"+
		"\u0000\u0099\u009a\u0005u\u0000\u0000\u009a\u009b\u0005e\u0000\u0000\u009b"+
		"\u0019\u0001\u0000\u0000\u0000\u009c\u009d\u0005&\u0000\u0000\u009d\u009e"+
		"\u0005&\u0000\u0000\u009e\u001b\u0001\u0000\u0000\u0000\u009f\u00a0\u0005"+
		"|\u0000\u0000\u00a0\u00a1\u0005|\u0000\u0000\u00a1\u001d\u0001\u0000\u0000"+
		"\u0000\u00a2\u00a3\u0005.\u0000\u0000\u00a3\u001f\u0001\u0000\u0000\u0000"+
		"\u00a4\u00a5\u0005?\u0000\u0000\u00a5!\u0001\u0000\u0000\u0000\u00a6\u00a7"+
		"\u0005?\u0000\u0000\u00a7\u00a8\u0005?\u0000\u0000\u00a8#\u0001\u0000"+
		"\u0000\u0000\u00a9\u00aa\u0005!\u0000\u0000\u00aa%\u0001\u0000\u0000\u0000"+
		"\u00ab\u00ac\u0005,\u0000\u0000\u00ac\'\u0001\u0000\u0000\u0000\u00ad"+
		"\u00ae\u0005(\u0000\u0000\u00ae)\u0001\u0000\u0000\u0000\u00af\u00b0\u0005"+
		")\u0000\u0000\u00b0+\u0001\u0000\u0000\u0000\u00b1\u00b2\u0005{\u0000"+
		"\u0000\u00b2-\u0001\u0000\u0000\u0000\u00b3\u00b4\u0005}\u0000\u0000\u00b4"+
		"\u00b5\u0001\u0000\u0000\u0000\u00b5\u00b6\u0006\u0016\u0002\u0000\u00b6"+
		"/\u0001\u0000\u0000\u0000\u00b7\u00b8\u0005>\u0000\u0000\u00b8\u00b9\u0001"+
		"\u0000\u0000\u0000\u00b9\u00ba\u0006\u0017\u0002\u0000\u00ba1\u0001\u0000"+
		"\u0000\u0000\u00bb\u00bc\u0005=\u0000\u0000\u00bc\u00bd\u0005=\u0000\u0000"+
		"\u00bd3\u0001\u0000\u0000\u0000\u00be\u00bf\u0005!\u0000\u0000\u00bf\u00c0"+
		"\u0005=\u0000\u0000\u00c05\u0001\u0000\u0000\u0000\u00c1\u00c2\u0005g"+
		"\u0000\u0000\u00c2\u00c3\u0005t\u0000\u0000\u00c37\u0001\u0000\u0000\u0000"+
		"\u00c4\u00c5\u0005l\u0000\u0000\u00c5\u00c6\u0005t\u0000\u0000\u00c69"+
		"\u0001\u0000\u0000\u0000\u00c7\u00c8\u0005+\u0000\u0000\u00c8;\u0001\u0000"+
		"\u0000\u0000\u00c9\u00ca\u0005-\u0000\u0000\u00ca=\u0001\u0000\u0000\u0000"+
		"\u00cb\u00cc\u0005*\u0000\u0000\u00cc?\u0001\u0000\u0000\u0000\u00cd\u00ce"+
		"\u0005/\u0000\u0000\u00ceA\u0001\u0000\u0000\u0000\u00cf\u00d0\u0005%"+
		"\u0000\u0000\u00d0C\u0001\u0000\u0000\u0000\u00d1\u00d5\u0007\u0002\u0000"+
		"\u0000\u00d2\u00d4\u0007\u0003\u0000\u0000\u00d3\u00d2\u0001\u0000\u0000"+
		"\u0000\u00d4\u00d7\u0001\u0000\u0000\u0000\u00d5\u00d3\u0001\u0000\u0000"+
		"\u0000\u00d5\u00d6\u0001\u0000\u0000\u0000\u00d6E\u0001\u0000\u0000\u0000"+
		"\u00d7\u00d5\u0001\u0000\u0000\u0000\u00d8\u00dc\u0005\"\u0000\u0000\u00d9"+
		"\u00db\u0003L%\u0000\u00da\u00d9\u0001\u0000\u0000\u0000\u00db\u00de\u0001"+
		"\u0000\u0000\u0000\u00dc\u00dd\u0001\u0000\u0000\u0000\u00dc\u00da\u0001"+
		"\u0000\u0000\u0000\u00dd\u00df\u0001\u0000\u0000\u0000\u00de\u00dc\u0001"+
		"\u0000\u0000\u0000\u00df\u00e0\u0005\"\u0000\u0000\u00e0G\u0001\u0000"+
		"\u0000\u0000\u00e1\u00e5\u0005\'\u0000\u0000\u00e2\u00e4\u0003L%\u0000"+
		"\u00e3\u00e2\u0001\u0000\u0000\u0000\u00e4\u00e7\u0001\u0000\u0000\u0000"+
		"\u00e5\u00e6\u0001\u0000\u0000\u0000\u00e5\u00e3\u0001\u0000\u0000\u0000"+
		"\u00e6\u00e8\u0001\u0000\u0000\u0000\u00e7\u00e5\u0001\u0000\u0000\u0000"+
		"\u00e8\u00e9\u0005\'\u0000\u0000\u00e9I\u0001\u0000\u0000\u0000\u00ea"+
		"\u00f3\u00050\u0000\u0000\u00eb\u00ef\u0007\u0004\u0000\u0000\u00ec\u00ee"+
		"\u0007\u0005\u0000\u0000\u00ed\u00ec\u0001\u0000\u0000\u0000\u00ee\u00f1"+
		"\u0001\u0000\u0000\u0000\u00ef\u00ed\u0001\u0000\u0000\u0000\u00ef\u00f0"+
		"\u0001\u0000\u0000\u0000\u00f0\u00f3\u0001\u0000\u0000\u0000\u00f1\u00ef"+
		"\u0001\u0000\u0000\u0000\u00f2\u00ea\u0001\u0000\u0000\u0000\u00f2\u00eb"+
		"\u0001\u0000\u0000\u0000\u00f3K\u0001\u0000\u0000\u0000\u00f4\u00f5\b"+
		"\u0006\u0000\u0000\u00f5M\u0001\u0000\u0000\u0000\t\u0000\u0001Q\u0090"+
		"\u00d5\u00dc\u00e5\u00ef\u00f2\u0003\u0005\u0001\u0000\u0006\u0000\u0000"+
		"\u0004\u0000\u0000";
	public static final ATN _ATN =
		new ATNDeserializer().deserialize(_serializedATN.toCharArray());
	static {
		_decisionToDFA = new DFA[_ATN.getNumberOfDecisions()];
		for (int i = 0; i < _ATN.getNumberOfDecisions(); i++) {
			_decisionToDFA[i] = new DFA(_ATN.getDecisionState(i), i);
		}
	}
}